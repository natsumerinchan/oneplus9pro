name: Kernel Build CI

on:
  push:

jobs:
  build-lemonade-clang:

    runs-on: ubuntu-latest

    steps:
    - name: Setup repo
      run: sudo apt update -y && sudo apt install -y repo elfutils libarchive-tools
    - name: Repo sync
      run: |
        repo init -u https://github.com/mvaisakh/android_kernel_manifest -b eva-oneplus-5.4 --depth=1
        repo sync --no-tags --no-clone-bundle -j$(nproc --all)
    - name: Sync Clang
      run: |
        mkdir -p prebuilts-master/clang/host/linux-x86/clang-r416183b/
        cd prebuilts-master/clang/host/linux-x86/clang-r416183b/
        curl -LO "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman"
        bash antman -S=latest
        bash antman --patch=glibc
    - name: Clang Build
      run: |
        sed -i s/build-user/mvaisakh/g build/_setup_env.sh
        sed -i s/build-host/statixos/g build/_setup_env.sh
        BUILD_CONFIG=kernel/msm-5.4/build.config.msm.lahaina VARIANT=nqgki LTO=none BUILD_KERNEL=1 build/build.sh
    - name: Create zip
      run: |
        cp out/msm-5.4-lahaina-nqgki/dist/Image ak3/
        cat out/msm-5.4-lahaina-nqgki/dist/*.dtb > ak3/dtb
        cp out/msm-5.4-lahaina-nqgki/dist/dtbo.img ak3/
        cd ak3/ && zip -r9 eva-lemonade-$(/bin/date -u '+%d%m%Y%I%M')-clang.zip * -x .git README.md ./*/placeholder
        cd ../
    - uses: actions/upload-artifact@main
      with:
       name: release-zip
       path: ak3/*.zip

  build-lemonade-gcc:

    runs-on: ubuntu-latest

    steps:
    - name: Setup repo
      run: sudo apt update -y && sudo apt install -y repo elfutils
    - name: Repo sync
      run: |
        repo init -u https://github.com/mvaisakh/android_kernel_manifest -b eva-oneplus-5.4 --depth=1
        repo sync --no-tags --no-clone-bundle -j$(nproc --all)
    - name: GCC Build
      run: |
        sed -i s/build-user/mvaisakh/g build/_setup_env.sh
        sed -i s/build-host/statixos/g build/_setup_env.sh
        BUILD_CONFIG=kernel/msm-5.4/build.config.msm.lahaina VARIANT=nqgki COMPILER=gcc BUILD_KERNEL=1 build/build.sh
    - name: Create zip
      run: |
        cp out/msm-5.4-lahaina-nqgki/dist/Image ak3/
        cat out/msm-5.4-lahaina-nqgki/dist/*.dtb > ak3/dtb
        cp out/msm-5.4-lahaina-nqgki/dist/dtbo.img ak3/
        cd ak3/ && zip -r9 eva-lemonade-$(/bin/date -u '+%d%m%Y%I%M')-gcc.zip * -x .git README.md ./*/placeholder
        cd ../
    - uses: actions/upload-artifact@main
      with:
       name: release-zip
       path: ak3/*.zip

  build-martini-clang:

    runs-on: ubuntu-latest

    steps:
    - name: Setup repo
      run: sudo apt update -y && sudo apt install -y repo elfutils libarchive-tools
    - name: Repo sync
      run: |
        repo init -u https://github.com/mvaisakh/android_kernel_manifest -b eva-oneplus-5.4 --depth=1
        repo sync --no-tags --no-clone-bundle -j$(nproc --all)
    - name: Sync Clang
      run: |
        mkdir -p prebuilts-master/clang/host/linux-x86/clang-r416183b/
        cd prebuilts-master/clang/host/linux-x86/clang-r416183b/
        curl -LO "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman"
        bash antman -S=latest
        bash antman --patch=glibc
    - name: Clang Build
      run: |
        sed -i s/build-user/mvaisakh/g build/_setup_env.sh
        sed -i s/build-host/statixos/g build/_setup_env.sh
        BUILD_CONFIG=kernel/msm-5.4/build.config.msm.lahaina VARIANT=nqgki DEVICE=9RT LTO=none BUILD_KERNEL=1 build/build.sh
    - name: Create zip
      run: |
        cp out/msm-5.4-lahaina-nqgki/dist/Image ak3/
        cat out/msm-5.4-lahaina-nqgki/dist/*.dtb > ak3/dtb
        cp out/msm-5.4-lahaina-nqgki/dist/dtbo.img ak3/
        cd ak3/ && zip -r9 eva-martini-$(/bin/date -u '+%d%m%Y%I%M')-clang.zip * -x .git README.md ./*/placeholder
        cd ../
    - uses: actions/upload-artifact@main
      with:
       name: release-zip
       path: ak3/*.zip

  build-martini-gcc:

    runs-on: ubuntu-latest

    steps:
    - name: Setup repo
      run: sudo apt update -y && sudo apt install -y repo elfutils
    - name: Repo sync
      run: |
        repo init -u https://github.com/mvaisakh/android_kernel_manifest -b eva-oneplus-5.4 --depth=1
        repo sync --no-tags --no-clone-bundle -j$(nproc --all)
    - name: GCC Build
      run: |
        sed -i s/build-user/mvaisakh/g build/_setup_env.sh
        sed -i s/build-host/statixos/g build/_setup_env.sh
        BUILD_CONFIG=kernel/msm-5.4/build.config.msm.lahaina DEVICE=9RT VARIANT=nqgki COMPILER=gcc BUILD_KERNEL=1 build/build.sh
    - name: Create zip
      run: |
        cp out/msm-5.4-lahaina-nqgki/dist/Image ak3/
        cat out/msm-5.4-lahaina-nqgki/dist/*.dtb > ak3/dtb
        cp out/msm-5.4-lahaina-nqgki/dist/dtbo.img ak3/
        cd ak3/ && zip -r9 eva-martini-$(/bin/date -u '+%d%m%Y%I%M')-gcc.zip * -x .git README.md ./*/placeholder
        cd ../
    - uses: actions/upload-artifact@main
      with:
       name: release-zip
       path: ak3/*.zip

  publish-release:
    needs: [build-lemonade-clang,build-lemonade-gcc,build-martini-clang,build-martini-gcc]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Restoring artifacts
      uses: actions/download-artifact@main
      with:
        name: release-zip
        path: ${{ github.workspace }}
    - name: Release Tag
      id: release_tag
      run: echo "TAG_NAME=$(date -u +%d%m%Y%I%M)" >> $GITHUB_ENV
    - name: Create Release
      run: gh release create ${{ env.TAG_NAME }} --generate-notes -p *.zip
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
